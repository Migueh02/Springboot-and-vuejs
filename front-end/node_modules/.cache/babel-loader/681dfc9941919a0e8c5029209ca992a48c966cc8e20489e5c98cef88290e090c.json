{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      estudiantes: [],\n      nuevoEstudiante: {\n        cc: '',\n        Nombre: '',\n        Apellido: '',\n        Telefono: '',\n        Email: '',\n        Carrera: ''\n      },\n      editMode: false,\n      // Controla si estamos editando\n      currentEstudiante: null // Guarda el estudiante actual a editar\n    };\n  },\n  methods: {\n    // Obtener todos los estudiantes\n    async getEstudiantes() {\n      try {\n        const response = await axios.get('http://localhost:8080/api/uniminuto/estudiantes');\n        this.estudiantes = response.data;\n      } catch (error) {\n        console.error('Hubo un error al obtener los estudiantes:', error);\n      }\n    },\n    // Crear un nuevo estudiante\n    async createEstudiante() {\n      try {\n        await axios.post('http://localhost:8080/api/uniminuto/estudiantes', this.nuevoEstudiante);\n        this.getEstudiantes();\n        this.resetForm();\n      } catch (error) {\n        console.error('Hubo un error al crear el estudiante:', error);\n      }\n    },\n    // Eliminar un estudiante\n    async deleteEstudiante(id) {\n      try {\n        await axios.delete(`http://localhost:8080/api/uniminuto/estudiantes/${id}`);\n        this.getEstudiantes();\n      } catch (error) {\n        console.error('Hubo un error al eliminar el estudiante:', error);\n      }\n    },\n    // Editar un estudiante\n    editEstudiante(estudiante) {\n      this.editMode = true; // Activamos el modo de edición\n      this.currentEstudiante = estudiante; // Guardamos el estudiante a editar\n      // Cargamos los datos en el formulario\n      this.nuevoEstudiante = {\n        ...estudiante\n      };\n    },\n    // Actualizar un estudiante\n    async updateEstudiante() {\n      try {\n        await axios.put(`http://localhost:8080/api/uniminuto/estudiantes/${this.currentEstudiante.id}`, this.nuevoEstudiante);\n        this.getEstudiantes();\n        this.resetForm();\n      } catch (error) {\n        console.error('Hubo un error al actualizar el estudiante:', error);\n      }\n    },\n    // Restablecer el formulario\n    resetForm() {\n      this.nuevoEstudiante = {\n        cc: '',\n        Nombre: '',\n        Apellido: '',\n        Telefono: '',\n        Email: '',\n        Carrera: ''\n      };\n      this.editMode = false; // Desactivamos el modo de edición\n      this.currentEstudiante = null;\n    }\n  },\n  mounted() {\n    this.getEstudiantes();\n  }\n};","map":{"version":3,"names":["axios","data","estudiantes","nuevoEstudiante","cc","Nombre","Apellido","Telefono","Email","Carrera","editMode","currentEstudiante","methods","getEstudiantes","response","get","error","console","createEstudiante","post","resetForm","deleteEstudiante","id","delete","editEstudiante","estudiante","updateEstudiante","put","mounted"],"sources":["/home/migueh/Front Vue/estudiante-crud/src/components/EstudiantesList.vue"],"sourcesContent":["\n<template>\n  <div>\n    <!-- Formulario para Crear Estudiante -->\n    <h3 v-if=\"!editMode\">Crear Estudiante</h3>\n    <h3 v-if=\"editMode\">Editar Estudiante</h3>\n    <form @submit.prevent=\"editMode ? updateEstudiante() : createEstudiante\">\n      <input v-model=\"nuevoEstudiante.cc\" placeholder=\"Cédula\" required />\n      <input v-model=\"nuevoEstudiante.Nombre\" placeholder=\"Nombre\" required />\n      <input v-model=\"nuevoEstudiante.Apellido\" placeholder=\"Apellido\" required />\n      <input v-model=\"nuevoEstudiante.Telefono\" placeholder=\"Teléfono\" />\n      <input v-model=\"nuevoEstudiante.Email\" placeholder=\"Email\" />\n      <input v-model=\"nuevoEstudiante.Carrera\" placeholder=\"Carrera\" />\n      <button type=\"submit\">{{ editMode ? 'Actualizar Estudiante' : 'Crear Estudiante' }}</button>\n    </form>\n\n    <!-- Listado de Estudiantes -->\n    <h2>Listado de Estudiantes</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>CC</th>\n          <th>Nombre</th>\n          <th>Apellido</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"estudiante in estudiantes\" :key=\"estudiante.id\">\n          <td>{{ estudiante.cc }}</td>\n          <td>{{ estudiante.nombre }}</td>\n          <td>{{ estudiante.apellido }}</td>\n          <td>\n            <button @click=\"editEstudiante(estudiante)\">Editar</button>\n            <button @click=\"deleteEstudiante(estudiante.id)\">Eliminar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n  \n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      estudiantes: [],\n      nuevoEstudiante: {\n        cc: '',\n        Nombre: '',\n        Apellido: '',\n        Telefono: '',\n        Email: '',\n        Carrera: ''\n      },\n      editMode: false, // Controla si estamos editando\n      currentEstudiante: null, // Guarda el estudiante actual a editar\n    }\n  },\n  methods: {\n    // Obtener todos los estudiantes\n    async getEstudiantes() {\n      try {\n        const response = await axios.get('http://localhost:8080/api/uniminuto/estudiantes')\n        this.estudiantes = response.data\n      } catch (error) {\n        console.error('Hubo un error al obtener los estudiantes:', error)\n      }\n    },\n    // Crear un nuevo estudiante\n    async createEstudiante() {\n      try {\n        await axios.post('http://localhost:8080/api/uniminuto/estudiantes', this.nuevoEstudiante)\n        this.getEstudiantes()\n        this.resetForm()\n      } catch (error) {\n        console.error('Hubo un error al crear el estudiante:', error)\n      }\n    },\n    // Eliminar un estudiante\n    async deleteEstudiante(id) {\n      try {\n        await axios.delete(`http://localhost:8080/api/uniminuto/estudiantes/${id}`)\n        this.getEstudiantes()\n      } catch (error) {\n        console.error('Hubo un error al eliminar el estudiante:', error)\n      }\n    },\n    // Editar un estudiante\n    editEstudiante(estudiante) {\n      this.editMode = true // Activamos el modo de edición\n      this.currentEstudiante = estudiante // Guardamos el estudiante a editar\n      // Cargamos los datos en el formulario\n      this.nuevoEstudiante = { ...estudiante }\n    },\n    // Actualizar un estudiante\n    async updateEstudiante() {\n      try {\n        await axios.put(`http://localhost:8080/api/uniminuto/estudiantes/${this.currentEstudiante.id}`, this.nuevoEstudiante)\n        this.getEstudiantes()\n        this.resetForm()\n      } catch (error) {\n        console.error('Hubo un error al actualizar el estudiante:', error)\n      }\n    },\n    // Restablecer el formulario\n    resetForm() {\n      this.nuevoEstudiante = {\n        cc: '',\n        Nombre: '',\n        Apellido: '',\n        Telefono: '',\n        Email: '',\n        Carrera: ''\n      }\n      this.editMode = false // Desactivamos el modo de edición\n      this.currentEstudiante = null\n    }\n  },\n  mounted() {\n    this.getEstudiantes()\n  }\n}\n</script>\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;QACfC,EAAE,EAAE,EAAE;QACNC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE,KAAK;MAAE;MACjBC,iBAAiB,EAAE,IAAI,CAAE;IAC3B;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,iDAAiD;QAClF,IAAI,CAACb,WAAU,GAAIY,QAAQ,CAACb,IAAG;MACjC,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK;MAClE;IACF,CAAC;IACD;IACA,MAAME,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iDAAiD,EAAE,IAAI,CAAChB,eAAe;QACxF,IAAI,CAACU,cAAc,CAAC;QACpB,IAAI,CAACO,SAAS,CAAC;MACjB,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK;MAC9D;IACF,CAAC;IACD;IACA,MAAMK,gBAAgBA,CAACC,EAAE,EAAE;MACzB,IAAI;QACF,MAAMtB,KAAK,CAACuB,MAAM,CAAC,mDAAmDD,EAAE,EAAE;QAC1E,IAAI,CAACT,cAAc,CAAC;MACtB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK;MACjE;IACF,CAAC;IACD;IACAQ,cAAcA,CAACC,UAAU,EAAE;MACzB,IAAI,CAACf,QAAO,GAAI,IAAG,EAAE;MACrB,IAAI,CAACC,iBAAgB,GAAIc,UAAS,EAAE;MACpC;MACA,IAAI,CAACtB,eAAc,GAAI;QAAE,GAAGsB;MAAW;IACzC,CAAC;IACD;IACA,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,mDAAmD,IAAI,CAAChB,iBAAiB,CAACW,EAAE,EAAE,EAAE,IAAI,CAACnB,eAAe;QACpH,IAAI,CAACU,cAAc,CAAC;QACpB,IAAI,CAACO,SAAS,CAAC;MACjB,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK;MACnE;IACF,CAAC;IACD;IACAI,SAASA,CAAA,EAAG;MACV,IAAI,CAACjB,eAAc,GAAI;QACrBC,EAAE,EAAE,EAAE;QACNC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX;MACA,IAAI,CAACC,QAAO,GAAI,KAAI,EAAE;MACtB,IAAI,CAACC,iBAAgB,GAAI,IAAG;IAC9B;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,cAAc,CAAC;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}